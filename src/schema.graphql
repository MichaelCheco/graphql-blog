scalar DateTime

type Query {
    me: User
    filterPosts:(searchString: String): [Post!]!
    feed: [Post!]!
    post(id: ID!): Post
}

type Mutation {
    createDraft(title: String!, content: String!): Post!
    deletePost(id: ID!): Post
    publish(id: ID!): Post
    signup(email: String!, password: String!, name: String!): AuthPayload!
    login(email: String!, password: String!): AuthPayload!
}

type AuthPayload {
    token: String!
    user: User!
}
type User {
    id: ID!
    name: String
    email: String!
    posts: [Post!]!
}

type Post {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    published: Boolean!
    title: String!
    content: String!
    author: User!
}